
    
def fib():
    a=0
    b=1
    yield a
    yield b
    while True: 
        a,b = b, a+b
        yield b
        
def getFib(start,end):
    for i in fib():
        if i>end: return
        if i>=start:print i         
        
        


inorder traversal (Left, Current, Right) 

def inorder(BT):
    inorder_iterative(BT.root)
   
def inorder_iterative(node):
    S = Stack()
    
    while S.size()!=0 or node!=None:
        if node!=None:
            S.push(node)
            node = node.left
        else:
            node = S.pop()
            visit(node)
            node = node.right

preorder traversal (Current, Left, Right) 

def preorder(BT): 
    preorder_iterative(BT.root)
    
def preorder_iterative(node):
    S = Stack()
 
    while S.size()!=0 or node!=None:
        if node!=None :
            visit(Node)
            S.push(Node.right)
            node = node.left
        else:
            node = S.pop()
            